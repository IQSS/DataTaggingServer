# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index
GET     /interviews/                controllers.Application.questionnaireCatalog
GET     /interviews/tagDownload                  controllers.Interview.downloadTags
GET     /interviews/:questionnaireId/intro       controllers.Interview.interviewIntro(questionnaireId)
GET     /interviews/:questionnaireId/start       controllers.Interview.startInterview(questionnaireId, localizationName:Option[String]?=None)
GET     /interviews/:questionnaireId/postReadme  controllers.Interview.startInterviewPostReadme(questionnaireId)
GET     /interviews/:questionnaireId/q/:nodeId   controllers.Interview.askNode(questionnaireId, nodeId)
POST    /interviews/:questionnaireId/q/:nodeId   controllers.Interview.answer(questionnaireId, nodeId)
GET     /interviews/:questionnaireId/accept      controllers.Interview.accept(questionnaireId)
GET     /interviews/:questionnaireId/reject      controllers.Interview.reject(questionnaireId)
POST    /interviews/:questionnaireId/revisit/    controllers.Interview.revisit(questionnaireId)

GET  /visualizations/*path   controllers.Application.visualizationFile(path)

# Requested Interviews
POST	/api/1/interviewRequest/:interviewId   controllers.API.requestInterview(interviewId)
GET		/requestedInterview/:uniqueLinkId      controllers.RequestedInterview.start(uniqueLinkId: String)

POST	/postBackTo/:uniqueLinkId				controllers.RequestedInterview.postBackTo(uniqueLinkId: String)
POST 	/unacceptableDataset/:uniqueLinkId/:reason		controllers.RequestedInterview.unacceptableDataset(uniqueLinkId: String, reason: String)
POST 	/tempTestServer							controllers.Test.tempTestServer

# Back-office
GET     /admin/vpms-m/new     controllers.PolicyKitManagementCtrl.showNewVpmPage
POST    /admin/vpms-m/        controllers.PolicyKitManagementCtrl.doSaveNewVpm
GET     /admin/vpms-m/:id     controllers.PolicyKitManagementCtrl.showEditVpmPage(id)
POST    /admin/vpms-m/:id     controllers.PolicyKitManagementCtrl.doSaveVpm(id)
DELETE  /admin/vpms-m/:id     controllers.PolicyKitManagementCtrl.apiDoDeleteVpm(id)
GET     /admin/vpms/          controllers.PolicyKitManagementCtrl.showVpmList

# API
POST  /api/admin/reload-models controllers.Application.reloadModels

# Map static resources from the /public folder to the /assets URL path
GET  /assets/*file           controllers.Assets.at(path="/public", file)
GET  /javascriptRoutes       controllers.Application.javascriptRoutes

# Game and funs
GET	    /test/tagsDisplay/:id  controllers.Test.showTagTree(id, loc:Option[String]?=None)

GET     /test/visualizeFiles              controllers.VisualizerController.getVisualizeFiles
PUT     /test/models/:name                controllers.Test.addVersionedModel(name)
GET     /test/models/                     controllers.Test.listVersionedModels
GET     /test/models/:name                controllers.Test.showModel(name)