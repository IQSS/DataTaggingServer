# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                                        controllers.Application.index
GET     /interviews/                             controllers.Application.questionnaireCatalog
GET     /interviews/tagDownload                  controllers.Interview.downloadTags
GET     /interviews/:modelId/:versionNum/intro       controllers.Interview.interviewIntro(modelId, versionNum:Int)
GET     /interviews/:modelId/:versionNum/start       controllers.Interview.startInterview(modelId, versionNum:Int, localizationName:Option[String]?=None)
GET     /interviews/:modelId/:versionNum/postReadme  controllers.Interview.startInterviewPostReadme(modelId, versionNum:Int)
GET     /interviews/:modelId/:versionNum/q/:nodeId   controllers.Interview.askNode(modelId, versionNum:Int, nodeId)
POST    /interviews/:modelId/:versionNum/q/:nodeId   controllers.Interview.answer(modelId, versionNum:Int, nodeId)
GET     /interviews/:modelId/:versionNum/accept      controllers.Interview.accept(modelId, versionNum:Int)
GET     /interviews/:modelId/:versionNum/reject      controllers.Interview.reject(modelId, versionNum:Int)
POST    /interviews/:modelId/:versionNum/revisit/    controllers.Interview.revisit(modelId, versionNum:Int)

GET  /visualizations/*path   controllers.Application.visualizationFile(path)

# Requested Interviews
POST	/api/1/interviewRequest/:modelId/:versionNum   controllers.API.requestInterview(modelId, versionNum:Int)
GET		/requestedInterview/:uniqueLinkId      controllers.RequestedInterview.start(uniqueLinkId: String)

POST	/postBackTo/:uniqueLinkId				controllers.RequestedInterview.postBackTo(uniqueLinkId: String)
POST 	/unacceptableDataset/:uniqueLinkId/:reason		controllers.RequestedInterview.unacceptableDataset(uniqueLinkId: String, reason: String)
POST 	/tempTestServer							controllers.Test.tempTestServer

# Back-office
GET     /admin/vpms-m/new     controllers.PolicyKitManagementCtrl.showNewVpmPage
POST    /admin/vpms-m/        controllers.PolicyKitManagementCtrl.doSaveNewVpm
GET     /admin/vpms-m/:id     controllers.PolicyKitManagementCtrl.showEditVpmPage(id)
POST    /admin/vpms-m/:id     controllers.PolicyKitManagementCtrl.doSaveVpm(id)
DELETE  /admin/vpms-m/:id     controllers.PolicyKitManagementCtrl.apiDoDeleteVpm(id)

POST    /admin/vpms/:modelId/versions/           controllers.PolicyKitManagementCtrl.doSaveNewVersion(modelId)
GET     /admin/vpms/:modelId/versions/new/edit   controllers.PolicyKitManagementCtrl.showNewVersionPage(modelId)
GET     /admin/vpms/:modelId/versions/:vNum      controllers.PolicyKitManagementCtrl.showVersionPage(modelId, vNum:Int)
GET     /admin/vpms/:modelId/versions/:vNum/edit controllers.PolicyKitManagementCtrl.showEditVersionPage(modelId, vNum:Int)
POST    /admin/vpms/:modelId/versions/:vNum      controllers.PolicyKitManagementCtrl.doSaveVersion(modelId, vNum:Int)
GET     /admin/vpms/:id       controllers.PolicyKitManagementCtrl.showVpmPage(id)

# Content (and management)
GET     /vpms/          controllers.PolicyKitManagementCtrl.showVpmList
GET     /vpms/:id       controllers.Application.showVersionedPolicyModel(id)

# Users
GET     /admin/users/            controllers.UsersCtrl.showUserList
GET     /admin/users/new         controllers.UsersCtrl.showNewUserPage
POST    /admin/users/            controllers.UsersCtrl.doSaveNewUser
GET     /admin/users/:id/edit    controllers.UsersCtrl.showEditUserPage(id)
POST    /admin/users/:id/edit    controllers.UsersCtrl.doSaveUser(id)
POST    /admin/api/users/        controllers.UsersCtrl.apiAddUser

# Map static resources from the /public folder to the /assets URL path
GET  /assets/*file           controllers.Assets.at(path="/public", file)
GET  /javascriptRoutes       controllers.Application.javascriptRoutes

# Game and funs
GET	    /test/tagsDisplay/:modelId/:versionNum  controllers.Test.showTagTree(modelId, versionNum:Int, loc:Option[String]?=None)

PUT     /test/models/:name                controllers.Test.addVersionedModel(name)
GET     /test/models/                     controllers.Test.listVersionedModels
GET     /test/models/:name                controllers.Test.showModel(name)